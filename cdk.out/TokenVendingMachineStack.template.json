{
 "Resources": {
  "TvmSigningKeyC38F9A74": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "KeySpec": "RSA_2048",
    "KeyUsage": "SIGN_VERIFY"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmSigningKey/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "OIDC signing requires an asymmetric key (RSA); KMS asymmetric keys cannot auto-rotate.",
       "id": "AwsSolutions-KMS5"
      }
     ]
    }
   }
  },
  "TvmKeySecretE13F1521": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "GenerateStringKey": "secret",
     "SecretStringTemplate": {
      "Fn::Join": [
       "",
       [
        "{\"keyId\":\"",
        {
         "Ref": "TvmSigningKeyC38F9A74"
        },
        "\"}"
       ]
      ]
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmKeySecret/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Rotation not needed for this ephemeral signing secret.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "TvmSigningKeyAliasC867900D": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/tvm-token-signing",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "TvmSigningKeyC38F9A74",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmSigningKeyAlias/Resource"
   }
  },
  "TvmLambdaExecRoleC50FF80B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmLambdaExecRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "AWSLambdaBasicExecutionRole is required for Lambda logging",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "TvmLambdaExecRoleDefaultPolicy75C8D8DD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kms:Sign",
        "kms:GetPublicKey",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TvmSigningKeyC38F9A74",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "TvmKeySecretE13F1521"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TvmLambdaExecRoleDefaultPolicy75C8D8DD",
    "Roles": [
     {
      "Ref": "TvmLambdaExecRoleC50FF80B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmLambdaExecRole/DefaultPolicy/Resource"
   }
  },
  "TvmApiAccessLogsCE78B3C0": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/apigateway/TokenVendingMachineApi-access-logs",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApiAccessLogs/Resource"
   }
  },
  "TvmApiWafAcl": {
   "Type": "AWS::WAFv2::WebACL",
   "Properties": {
    "DefaultAction": {
     "Allow": {}
    },
    "Name": "TvmApiWafAcl",
    "Rules": [
     {
      "Action": {
       "Block": {}
      },
      "Name": "RateLimitRule",
      "Priority": 1,
      "Statement": {
       "RateBasedStatement": {
        "AggregateKeyType": "IP",
        "Limit": 1000
       }
      },
      "VisibilityConfig": {
       "CloudWatchMetricsEnabled": true,
       "MetricName": "RateLimitRule",
       "SampledRequestsEnabled": true
      }
     }
    ],
    "Scope": "REGIONAL",
    "VisibilityConfig": {
     "CloudWatchMetricsEnabled": true,
     "MetricName": "TvmApiWafAcl",
     "SampledRequestsEnabled": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApiWafAcl"
   }
  },
  "TvmApi9CC896B2": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "TokenVendingMachineApi"
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API GW needs AWS-managed log policy for CloudWatch",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "TvmApiCloudWatchRole44EA47B0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/CloudWatchRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API GW needs AWS-managed log policy for CloudWatch",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "TvmApiAccount8D744E39": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "TvmApiCloudWatchRole44EA47B0",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TvmApi9CC896B2"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Account",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API GW needs AWS-managed log policy for CloudWatch",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "TvmApiDeploymentD7E77208e3d00eb1296beb226e362895e59e2aa4": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "DependsOn": [
    "TvmApiwellknownjwksjsonGETFCE8BCE9",
    "TvmApiwellknownjwksjsonOPTIONS5B4E2346",
    "TvmApiwellknownjwksjsonCFDE7718",
    "TvmApiwellknownopenidconfigurationGET3147FE2F",
    "TvmApiwellknownopenidconfigurationOPTIONS7CD9C199",
    "TvmApiwellknownopenidconfigurationF023F998",
    "TvmApiwellknownOPTIONSCC58F860",
    "TvmApiwellknown6FBE51C8",
    "TvmApiOPTIONS3E174436",
    "TvmApitokenOPTIONSDDDB810C",
    "TvmApitokenPOST674FEA62",
    "TvmApitokenB3A67415",
    "TvmApiuserinfoGET2FE7D78A",
    "TvmApiuserinfoOPTIONS7B9B7656",
    "TvmApiuserinfoDB61FC45",
    "TvmApiValidator22D769BA"
   ],
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Deployment/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API GW needs AWS-managed log policy for CloudWatch",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "TvmApiDeploymentStageprod48FCCD80": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "TvmApiAccessLogsCE78B3C0",
       "Arn"
      ]
     },
     "Format": "$context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] \"$context.httpMethod $context.resourcePath $context.protocol\" $context.status $context.responseLength $context.requestId"
    },
    "DeploymentId": {
     "Ref": "TvmApiDeploymentD7E77208e3d00eb1296beb226e362895e59e2aa4"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "TvmApiAccount8D744E39"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/DeploymentStage.prod/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API GW needs AWS-managed log policy for CloudWatch",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "WAF is attached downstream via CfnWebACLAssociation.",
       "id": "AwsSolutions-APIG3"
      }
     ]
    }
   }
  },
  "TvmApiOPTIONS3E174436": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "TvmApi9CC896B2",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/OPTIONS/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "API GW needs AWS-managed log policy for CloudWatch",
       "id": "AwsSolutions-IAM4"
      }
     ]
    }
   }
  },
  "TvmApiwellknown6FBE51C8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TvmApi9CC896B2",
      "RootResourceId"
     ]
    },
    "PathPart": ".well-known",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/Resource"
   }
  },
  "TvmApiwellknownOPTIONSCC58F860": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "TvmApiwellknown6FBE51C8"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/OPTIONS/Resource"
   }
  },
  "TvmApiwellknownopenidconfigurationF023F998": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "TvmApiwellknown6FBE51C8"
    },
    "PathPart": "openid-configuration",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/openid-configuration/Resource"
   }
  },
  "TvmApiwellknownopenidconfigurationOPTIONS7CD9C199": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "TvmApiwellknownopenidconfigurationF023F998"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/openid-configuration/OPTIONS/Resource"
   }
  },
  "TvmApiwellknownopenidconfigurationGETApiPermissionTokenVendingMachineStackTvmApiE91A4EFDGETwellknownopenidconfiguration19B8076E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OpenIdConfigurationHandler6BB639A3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/",
       {
        "Ref": "TvmApiDeploymentStageprod48FCCD80"
       },
       "/GET/.well-known/openid-configuration"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/openid-configuration/GET/ApiPermission.TokenVendingMachineStackTvmApiE91A4EFD.GET...well-known.openid-configuration"
   }
  },
  "TvmApiwellknownopenidconfigurationGETApiPermissionTestTokenVendingMachineStackTvmApiE91A4EFDGETwellknownopenidconfigurationB90F1226": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OpenIdConfigurationHandler6BB639A3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/test-invoke-stage/GET/.well-known/openid-configuration"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/openid-configuration/GET/ApiPermission.Test.TokenVendingMachineStackTvmApiE91A4EFD.GET...well-known.openid-configuration"
   }
  },
  "TvmApiwellknownopenidconfigurationGET3147FE2F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OpenIdConfigurationHandler6BB639A3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestValidatorId": {
     "Ref": "TvmApiValidator22D769BA"
    },
    "ResourceId": {
     "Ref": "TvmApiwellknownopenidconfigurationF023F998"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/openid-configuration/GET/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "OIDC Discovery endpoint must be public",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "No Cognito auth on discovery",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "TvmApiwellknownjwksjsonCFDE7718": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "TvmApiwellknown6FBE51C8"
    },
    "PathPart": "jwks.json",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/jwks.json/Resource"
   }
  },
  "TvmApiwellknownjwksjsonOPTIONS5B4E2346": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "TvmApiwellknownjwksjsonCFDE7718"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/jwks.json/OPTIONS/Resource"
   }
  },
  "TvmApiwellknownjwksjsonGETApiPermissionTokenVendingMachineStackTvmApiE91A4EFDGETwellknownjwksjson0E212F42": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "JwksEndpointHandlerF3BCFCB7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/",
       {
        "Ref": "TvmApiDeploymentStageprod48FCCD80"
       },
       "/GET/.well-known/jwks.json"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/jwks.json/GET/ApiPermission.TokenVendingMachineStackTvmApiE91A4EFD.GET...well-known.jwks.json"
   }
  },
  "TvmApiwellknownjwksjsonGETApiPermissionTestTokenVendingMachineStackTvmApiE91A4EFDGETwellknownjwksjsonA76FE248": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "JwksEndpointHandlerF3BCFCB7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/test-invoke-stage/GET/.well-known/jwks.json"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/jwks.json/GET/ApiPermission.Test.TokenVendingMachineStackTvmApiE91A4EFD.GET...well-known.jwks.json"
   }
  },
  "TvmApiwellknownjwksjsonGETFCE8BCE9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "JwksEndpointHandlerF3BCFCB7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestValidatorId": {
     "Ref": "TvmApiValidator22D769BA"
    },
    "ResourceId": {
     "Ref": "TvmApiwellknownjwksjsonCFDE7718"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/.well-known/jwks.json/GET/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "JWKS endpoint must be public",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "No Cognito auth on JWKS",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "TvmApitokenB3A67415": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TvmApi9CC896B2",
      "RootResourceId"
     ]
    },
    "PathPart": "token",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/token/Resource"
   }
  },
  "TvmApitokenOPTIONSDDDB810C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "TvmApitokenB3A67415"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/token/OPTIONS/Resource"
   }
  },
  "TvmApitokenPOSTApiPermissionTokenVendingMachineStackTvmApiE91A4EFDPOSTtokenAA94A248": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenVendingMachineHandlerE4E0C0AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/",
       {
        "Ref": "TvmApiDeploymentStageprod48FCCD80"
       },
       "/POST/token"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/token/POST/ApiPermission.TokenVendingMachineStackTvmApiE91A4EFD.POST..token"
   }
  },
  "TvmApitokenPOSTApiPermissionTestTokenVendingMachineStackTvmApiE91A4EFDPOSTtoken12411C1C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenVendingMachineHandlerE4E0C0AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/test-invoke-stage/POST/token"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/token/POST/ApiPermission.Test.TokenVendingMachineStackTvmApiE91A4EFD.POST..token"
   }
  },
  "TvmApitokenPOST674FEA62": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TokenVendingMachineHandlerE4E0C0AF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestValidatorId": {
     "Ref": "TvmApiValidator22D769BA"
    },
    "ResourceId": {
     "Ref": "TvmApitokenB3A67415"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/token/POST/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Token endpoint must be public for OAuth2 clients",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "No Cognito auth on token",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "TvmApiuserinfoDB61FC45": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TvmApi9CC896B2",
      "RootResourceId"
     ]
    },
    "PathPart": "userinfo",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/userinfo/Resource"
   }
  },
  "TvmApiuserinfoOPTIONS7B9B7656": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "TvmApiuserinfoDB61FC45"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/userinfo/OPTIONS/Resource"
   }
  },
  "TvmApiuserinfoGETApiPermissionTokenVendingMachineStackTvmApiE91A4EFDGETuserinfoD4C7E699": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenVendingMachineHandlerE4E0C0AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/",
       {
        "Ref": "TvmApiDeploymentStageprod48FCCD80"
       },
       "/GET/userinfo"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/userinfo/GET/ApiPermission.TokenVendingMachineStackTvmApiE91A4EFD.GET..userinfo"
   }
  },
  "TvmApiuserinfoGETApiPermissionTestTokenVendingMachineStackTvmApiE91A4EFDGETuserinfo5C2D8201": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenVendingMachineHandlerE4E0C0AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TvmApi9CC896B2"
       },
       "/test-invoke-stage/GET/userinfo"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/userinfo/GET/ApiPermission.Test.TokenVendingMachineStackTvmApiE91A4EFD.GET..userinfo"
   }
  },
  "TvmApiuserinfoGET2FE7D78A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TokenVendingMachineHandlerE4E0C0AF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "RequestValidatorId": {
     "Ref": "TvmApiValidator22D769BA"
    },
    "ResourceId": {
     "Ref": "TvmApiuserinfoDB61FC45"
    },
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApi/Default/userinfo/GET/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "UserInfo endpoint must be public",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "No Cognito authorizer on UserInfo",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "TvmApiWafAssociation": {
   "Type": "AWS::WAFv2::WebACLAssociation",
   "Properties": {
    "ResourceArn": {
     "Fn::Sub": [
      "arn:aws:apigateway:${AWS::Region}::/restapis/${RestApiId}/stages/prod",
      {
       "RestApiId": {
        "Ref": "TvmApi9CC896B2"
       }
      }
     ]
    },
    "WebACLArn": {
     "Fn::GetAtt": [
      "TvmApiWafAcl",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TvmApiDeploymentStageprod48FCCD80"
   ],
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApiWafAssociation"
   }
  },
  "TvmApiValidator22D769BA": {
   "Type": "AWS::ApiGateway::RequestValidator",
   "Properties": {
    "Name": "body-and-params-validator",
    "RestApiId": {
     "Ref": "TvmApi9CC896B2"
    },
    "ValidateRequestBody": true,
    "ValidateRequestParameters": true
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TvmApiValidator/Resource"
   }
  },
  "OpenIdConfigurationHandler6BB639A3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "43fcdbec56c5a1e09921056a79a6b4cd28609ea12de36618a6861a0b8a90b43a.jar"
    },
    "Handler": "com.amazon.OpenIdConfigurationHandler::handleRequest",
    "Role": {
     "Fn::GetAtt": [
      "TvmLambdaExecRoleC50FF80B",
      "Arn"
     ]
    },
    "Runtime": "java21",
    "Timeout": 10
   },
   "DependsOn": [
    "TvmLambdaExecRoleDefaultPolicy75C8D8DD",
    "TvmLambdaExecRoleC50FF80B"
   ],
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/OpenIdConfigurationHandler/Resource",
    "aws:asset:path": "asset.43fcdbec56c5a1e09921056a79a6b4cd28609ea12de36618a6861a0b8a90b43a.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OpenIdConfigurationHandlerInvokeFcyXBRX02EWa52GlFECQiCzDt0fdRUDi4mo4foC5aUB45D49ED": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OpenIdConfigurationHandler6BB639A3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/OpenIdConfigurationHandler/InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU="
   }
  },
  "JwksEndpointHandlerF3BCFCB7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "43fcdbec56c5a1e09921056a79a6b4cd28609ea12de36618a6861a0b8a90b43a.jar"
    },
    "Environment": {
     "Variables": {
      "KEY_SECRET_NAME": {
       "Fn::Join": [
        "-",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "TvmKeySecretE13F1521"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "TvmKeySecretE13F1521"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       ]
      }
     }
    },
    "Handler": "com.amazon.JwksEndpointHandler::handleRequest",
    "Role": {
     "Fn::GetAtt": [
      "TvmLambdaExecRoleC50FF80B",
      "Arn"
     ]
    },
    "Runtime": "java21",
    "Timeout": 10
   },
   "DependsOn": [
    "TvmLambdaExecRoleDefaultPolicy75C8D8DD",
    "TvmLambdaExecRoleC50FF80B"
   ],
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/JwksEndpointHandler/Resource",
    "aws:asset:path": "asset.43fcdbec56c5a1e09921056a79a6b4cd28609ea12de36618a6861a0b8a90b43a.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "JwksEndpointHandlerInvokeFcyXBRX02EWa52GlFECQiCzDt0fdRUDi4mo4foC5aUF9D6C14A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "JwksEndpointHandlerF3BCFCB7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/JwksEndpointHandler/InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU="
   }
  },
  "TokenVendingMachineHandlerE4E0C0AF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "43fcdbec56c5a1e09921056a79a6b4cd28609ea12de36618a6861a0b8a90b43a.jar"
    },
    "Environment": {
     "Variables": {
      "KEY_SECRET_NAME": {
       "Fn::Join": [
        "-",
        [
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "TvmKeySecretE13F1521"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         {
          "Fn::Select": [
           1,
           {
            "Fn::Split": [
             "-",
             {
              "Fn::Select": [
               6,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "TvmKeySecretE13F1521"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       ]
      },
      "AUDIENCE": "qbusiness-audience"
     }
    },
    "Handler": "com.amazon.TokenVendingMachineHandler::handleRequest",
    "Role": {
     "Fn::GetAtt": [
      "TvmLambdaExecRoleC50FF80B",
      "Arn"
     ]
    },
    "Runtime": "java21",
    "Timeout": 10
   },
   "DependsOn": [
    "TvmLambdaExecRoleDefaultPolicy75C8D8DD",
    "TvmLambdaExecRoleC50FF80B"
   ],
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TokenVendingMachineHandler/Resource",
    "aws:asset:path": "asset.43fcdbec56c5a1e09921056a79a6b4cd28609ea12de36618a6861a0b8a90b43a.jar",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TokenVendingMachineHandlerInvokeFcyXBRX02EWa52GlFECQiCzDt0fdRUDi4mo4foC5aU635C840D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenVendingMachineHandlerE4E0C0AF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com"
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/TokenVendingMachineHandler/InvokeFcyXBRX02EWa52GlF+ECQiCzDt0fdRUDi4mo4foC5aU="
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQ3W7CMAyFn4X7kEF5gsK0SRvTEJO2S2RS03ltki4/IFT13eeksI0rf7bjHB8Xcr6Yy9kETn6qqmba0l72bwFUI7i06xvtZf+MZ7E6mBTKlsCnJMMgPCqHwWswUKPj0ZynByMNgkDLfmtbTMUcN7YllX8caRCtrVlmbetHZ2OXOlcexAkOx0L2XPvAfblai18qvbeKIJA1g4COagh4gjOroQ9lR1nwD0ulbDRB3GPX2rNGk9f8l7HtOm85Ao/a6BQuwaN4wfBpq9S80LV7ERl5i9+RBd+hpQqCdWPztsZuQe8ryJY26DR5zw7EQzQqWUkzV+b7LnbgPV9YlilwLpdRNRjSVsPNFq8xdDGI/C45IFPfLMe8sqai8eMnOMJdsZAzWUy+PNHU8W1Io9yO8QctV8WqGQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "TokenVendingMachineStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "TvmApiEndpoint4301A24D": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TvmApi9CC896B2"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TvmApiDeploymentStageprod48FCCD80"
      },
      "/"
     ]
    ]
   }
  },
  "TvmIssuerUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TvmApi9CC896B2"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TvmApiDeploymentStageprod48FCCD80"
      }
     ]
    ]
   },
   "Export": {
    "Name": "TvmIssuerUrl"
   }
  },
  "TvmAudience": {
   "Value": "qbusiness-audience",
   "Export": {
    "Name": "TvmAudience"
   }
  },
  "TvmApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TvmApi9CC896B2"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TvmApiDeploymentStageprod48FCCD80"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "TvmApiUrl"
   }
  },
  "ExportsOutputRefTvmApi9CC896B2287C1435": {
   "Value": {
    "Ref": "TvmApi9CC896B2"
   },
   "Export": {
    "Name": "TokenVendingMachineStack:ExportsOutputRefTvmApi9CC896B2287C1435"
   }
  },
  "ExportsOutputRefTvmApiDeploymentStageprod48FCCD805009B9E8": {
   "Value": {
    "Ref": "TvmApiDeploymentStageprod48FCCD80"
   },
   "Export": {
    "Name": "TokenVendingMachineStack:ExportsOutputRefTvmApiDeploymentStageprod48FCCD805009B9E8"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}